name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  TERM_IMAGE_NAME: utnetlab/term
  TERM_IMAGE_FILE: term2.Dockerfile
  GUI_IMAGE_NAME: utnetlab/gui
  GUI_IMAGE_FILE: gui2.web.Dockerfile

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Run tests
#         run: |
#           if [ -f docker-compose.test.yml ]; then
#             docker-compose --file docker-compose.test.yml build
#             docker-compose --file docker-compose.test.yml run sut
#           else
#             docker build . --file Dockerfile
#           fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
#     needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      # - name: Pull last image
      #   run: |
      #     TERM_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$(echo $TERM_IMAGE_NAME | sed -e 's#^utnetlab/##')
      #     GUI_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$(echo $GUI_IMAGE_NAME | sed -e 's#^utnetlab/##')

      #     # Change all uppercase to lowercase
      #     TERM_IMAGE_ID=$(echo $TERM_IMAGE_ID | tr '[A-Z]' '[a-z]')
      #     GUI_IMAGE_ID=$(echo $GUI_IMAGE_ID | tr '[A-Z]' '[a-z]')

      - name: Build term image
        run: docker build . --file $TERM_IMAGE_FILE --tag $TERM_IMAGE_NAME

      - name: Build gui image
        run: docker build . --file $GUI_IMAGE_FILE --tag $GUI_IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          TERM_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$(echo $TERM_IMAGE_NAME | sed -e 's#^utnetlab/##')
          GUI_IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$(echo $GUI_IMAGE_NAME | sed -e 's#^utnetlab/##')

          # Change all uppercase to lowercase
          TERM_IMAGE_ID=$(echo $TERM_IMAGE_ID | tr '[A-Z]' '[a-z]')
          GUI_IMAGE_ID=$(echo $GUI_IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo TERM_IMAGE_ID=$TERM_IMAGE_ID
          echo GUI_IMAGE_ID=$GUI_IMAGE_ID
          echo VERSION=$VERSION

          docker tag $TERM_IMAGE_NAME $TERM_IMAGE_ID:$VERSION
          docker tag $GUI_IMAGE_NAME $GUI_IMAGE_ID:$VERSION
          docker push $TERM_IMAGE_ID:$VERSION
          docker push $GUI_IMAGE_ID:$VERSION
